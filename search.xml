<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[当我们谈论旅行时我们在谈论什么]]></title>
    <url>%2F2017%2F06%2F19%2Fwhat-travel-means-to-us%2F</url>
    <content type="text"><![CDATA[You can either travel or read, but either your body or soul must be on the way.Roman Holiday 0x01.旅行意味着什么“要么读书，要么旅行，身体和灵魂总有一个在路上”，诚然这种生活境界很难做到。幸运的是，我们的出行随着交通的发展更加便捷。“但是自问为什么要去旅行呢？或者我们为了什么而去旅行？” 我喜欢喜欢深入到大自然，游览大好河山，陶冶情操。在旅行中，抛开生活工作中的电话和邮件，忘掉一切，你就是你自己，没有任何职位角色，聚焦于眼前的目标–攀爬一座山头或是骑行一段路程，努力的与时间赛跑，与周围的环境融为一体，即使身体的疲劳酸痛也不能阻止精神的自由翱翔！这就是所谓的“旅行的乐趣”。 每个人的生活就是一个圈子，时间久了我们对人物都会由熟悉到嫌弃，一成不变的生活方式是很难让人满意。在旅行的路上我们可以结识志同道合的朋友，打开你的视野和思维，体验不同风俗文化间的差异，一次短暂的消失，让你不会对生活感到疲惫。 这种角色的互换充满了欢愉，却又如夜空中烟花般短暂美丽，却仍是生活这篇章跳动的乐符。 0x02.阅读意味着什么旅行中我会带个kindle和一本纸质书，在文字地伴随下帮你度过路途中枯燥和无聊。 旅行相较于阅读，感官更加直接，画面感更强，所以我比较喜欢旅行。即使我喜欢旅行，花在阅读的时间更多，因为后者消耗更少的金钱和精力，所谓的投资回报率最高。 在这个快节奏的时代，知识付费横飞，我为什么还要一句句的阅读思考呢？不是有“成品”销售吗？当然你可以为此付些智商税，别人也拦不住。 当下的我们每天沉浸在微博、朋友圈、知乎，看着一些碎片化的“知识”而一知半解；缺乏阅读积累的思考，只是对少数话语的迷信；缺乏思考的阅读，只是对已有话语的模仿，其实这是“博识的无知”。杨绛先生的“想法太多，读书太少”描述最为贴切。 聪明的读者会知道自己没有什么，自己需要学习什么。通过系统阅读可以花最少的成本来构建自己的知识架构，可以让你在生活、工作中快速的成长，最重要的时让你学会自主的思考和独立的人格，在生活中不会随波而流！ 0x03.追寻远方我热爱阅读和旅行，我热爱生活！是因为我从之感受生活的希望，那么多美好的事物，生活展示出那么多可能性。世界如此美好，我应为只奋斗！我能有什么理由放弃呢！ 读万卷书，行万里路！ 共勉之。 – 写于苏州]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Reading</tag>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[thoughtworks读书雷达计划]]></title>
    <url>%2F2016%2F04%2F27%2Fthoughtworks-reading-rader-plan%2F</url>
    <content type="text"><![CDATA[纸上得来终觉浅，绝知此事要躬行！ 系统的进行阅读，然后尝试实践！计划长期有效！贴出豆瓣书单！ Coding Practice（编程实践）豆单 基础篇 Clean Code《代码整洁之道》Pragmatic Unit Testing《单元测试之道》The Productive Programmer《卓有成效的程序员》Test-Driven Development By Example《测试驱动开发》Clean Coder《程序员的职业修养》The Art of Readable Code《编写可读代码的艺术》 进阶篇 Refactoring To Patterns《重构与模式》Implementation Patterns《实现模式》Code Complete《代码大全》The Pragmatic Programmer《程序员修炼之道》 高级篇 Structure and Interpretation of Computer Programs《计算机程序的构造和解释》Working Effectively with Legacy Code《修改代码的艺术》 Architecture &amp; Design（架构与设计）基础篇 Agile Software Development 《敏捷软件开发：原则、实践与模式》Head First Design Patterns《深入浅出设计模式》Design Patterns 《设计模式》 进阶篇 The Art of UNIX Programming 《Unix编程艺术》Practical API Design 《框架设计的艺术》Domain Specific Languages 《领域特定语言》Patterns of Enterprise Application Architecture 《企业应用架构模式》 高级篇 Release ItDomain-Driven Design 《领域驱动设计》Enterprise Integration Patterns《企业集成模式》Beautiful Architecture《架构之美》Pattern-Oriented Software Architecture《面向模式的软件架构》 Methodology（方法学）基础篇 User Stories Applied《用户故事与敏捷方法》The Gold Mine《金矿》Scrum and XP From the Trenches《硝烟中的Scrum和XP》Continuous Integration《持续集成》Extreme Programming Explained《解析极限编程》 进阶篇 Lean Thinking《精益思想》Continuous Delivery《持续交付》How Google Tests SoftwareAgile TestingExtreme Programming Refactored《重构极限编程》 高级篇 Specification By Example Thought &amp; Leadership（思想与领导力）基础篇 The Effective Executive《卓有成效的管理者》Are Your Lights On?《你的灯亮着吗》Becoming A Technical Leader《成为技术领导者》 进阶篇 The Fifth Discipline《第五项修炼》The Design Of BusinessManagement 3.0《管理3.0：培养和提升敏捷领导力》Presentation To WinThe McKinsey Way《麦肯锡方法》 高级篇 Thinking, Fast and Slow《思考快与慢》 原文http://agiledon.github.io/blog/2013/04/17/thoughtworks-developer-reading-radar/]]></content>
      <categories>
        <category>Programmer</category>
      </categories>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
</search>